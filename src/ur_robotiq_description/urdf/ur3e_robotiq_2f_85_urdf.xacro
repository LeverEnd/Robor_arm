<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ur3e_robotiq_2f_85">

  <xacro:include filename="$(find ur_robotiq_description)/urdf/ur3e_urdf.xacro"/>
  <xacro:include filename="$(find ur_robotiq_description)/urdf/robotiq_2f_85_2_urdf.xacro"/>
<!--
  <xacro:arg name="prefix" default=""/>
  <xacro:arg name="tf_prefix" default="$(arg prefix)"/>
  <xacro:arg name="ur_type" default="ur3e"/>
  <xacro:arg name="robot_ip" default="0.0.0.0"/>
  <xacro:arg name="use_fake_hardware" default="true"/>
  <xacro:arg name="fake_sensor_commands" default="true"/>
  <xacro:arg name="sim_ignition" default="true"/>
  <xacro:arg name="sim_gazebo" default="false"/>
  <xacro:arg name="headless_mode" default="false"/>
  <xacro:arg name="simulation_controllers" default=""/>
  <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>
  

  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
  <xacro:include filename="$(find ur_description)/urdf/ur.ros2_control.xacro"/>
  

  <xacro:include filename="$(find robotiq_description)/urdf/ur_to_robotiq_adapter.urdf.xacro" />
  

  <xacro:include filename="$(find robotiq_description)/urdf/robotiq_2f_85_macro.urdf.xacro" />
  

  <xacro:property name="prefix" value="$(arg prefix)"/>
  <xacro:property name="initial_positions_file" value="$(arg initial_positions_file)"/>

  
  <link name="world" />
  
 
  <xacro:ur_robot
    name="${prefix}ur3e"
    tf_prefix="$(arg tf_prefix)"
    parent="world"
    joint_limits_parameters_file="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"
    kinematics_parameters_file="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"
    physical_parameters_file="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"
    visual_parameters_file="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"
    transmission_hw_interface=""
    safety_limits="false"
    safety_pos_margin="0.15"
    safety_k_position="20"
    use_fake_hardware="$(arg use_fake_hardware)"
    fake_sensor_commands="$(arg fake_sensor_commands)"
    sim_gazebo="$(arg sim_gazebo)"
    sim_ignition="$(arg sim_ignition)"
    headless_mode="$(arg headless_mode)"
    initial_positions="${xacro.load_yaml(initial_positions_file)}"
    use_tool_communication="false"
    tool_voltage="0"
    tool_parity="0"
    tool_baud_rate="115200"
    tool_stop_bits="1"
    tool_rx_idle_chars="1.5"
    tool_tx_idle_chars="3.5"
    tool_device_name="/tmp/ttyUR"
    tool_tcp_port="54321"
    robot_ip="$(arg robot_ip)"
    script_filename=""
    output_recipe_filename=""
    input_recipe_filename=""
    reverse_ip="0.0.0.0"
    script_command_port="50004"
    reverse_port="50001"
    script_sender_port="50002"
    trajectory_port="50003">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:ur_robot>
  

  <xacro:ur_to_robotiq 
    prefix="${prefix}" 
    connected_to="${prefix}ur3e_tool0" />
  

  <xacro:robotiq_gripper
    name="${prefix}robotiq" 
    prefix="${prefix}robotiq_" 
    parent="${prefix}gripper_mount_link" 
    use_fake_hardware="$(arg use_fake_hardware)">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:robotiq_gripper>-->
  

  <!--<xacro:if value="$(arg sim_gazebo)">
    <gazebo>
      <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
        <parameters>$(arg simulation_controllers)</parameters>
      </plugin>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg sim_ignition)">
    <gazebo>
      <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboROS2ControlPlugin">
        <parameters>$(arg simulation_controllers)</parameters>
        <controller_manager_node_name>$(arg tf_prefix)controller_manager</controller_manager_node_name>
      </plugin>
    </gazebo>
  </xacro:if>-->
</robot>
